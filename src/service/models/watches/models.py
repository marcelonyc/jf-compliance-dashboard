# generated by datamodel-codegen:
#   filename:  watches.json
#   timestamp: 2024-11-26T14:49:57+00:00

from __future__ import annotations

from typing import Any, Dict, List, Optional, Union

from sqlmodel import Field, SQLModel, ARRAY, create_engine, JSON
from typing import List
from sqlalchemy import Column, JSON


class GeneralData(SQLModel):
    id: str
    name: str
    active: Optional[bool] = None
    project_key: Optional[str] = None
    description: Optional[str] = None


class Value(SQLModel):
    ExcludePatterns: List
    IncludePatterns: List[str]


class Filter(SQLModel):
    type: str
    value: Union[str, Value]


class Resource(SQLModel):
    type: str
    name: str
    bin_mgr_id: str
    repo_type: Optional[str] = None
    build_repo: Optional[str] = None
    filters: Optional[List[Filter]] = None


class ProjectResources(SQLModel):
    resources: Optional[List[Resource]] = None


class AssignedPolicy(SQLModel):
    name: str
    type: str


class ByVersion(SQLModel):
    build: bool
    package: bool
    release_bundle: bool


class CreateDuplicateTickets(SQLModel):
    by_version: ByVersion


class TicketGeneration(SQLModel):
    create_duplicate_tickets: CreateDuplicateTickets
    impact_path_profiles_mapping: Dict[str, Any]
    create_tickets_for_ignored_violation: bool


class WatchesPreProcess(SQLModel):
    general_data: GeneralData
    project_resources: ProjectResources = Field(sa_column=Column(JSON))
    assigned_policies: Optional[list] = Field(
        sa_column=Column(JSON), default=None
    )
    ticket_generation: TicketGeneration = Field(sa_column=Column(JSON))
    watch_recipients: Optional[list] = Field(
        sa_column=Column(JSON), default=None
    )
    create_ticket_enabled: Optional[bool] = None
    ticket_profile: Optional[str] = None


class Watches(SQLModel, table=True):
    id: str = Field(primary_key=True)
    name: str
    active: Optional[bool] = None
    project_key: Optional[str] = None
    description: Optional[str] = None
    project_resources: ProjectResources = Field(sa_column=Column(JSON))
    assigned_policies: Optional[list] = Field(
        sa_column=Column(JSON), default=None
    )
    ticket_generation: TicketGeneration = Field(sa_column=Column(JSON))
    watch_recipients: Optional[list] = Field(
        sa_column=Column(JSON), default=None
    )
    create_ticket_enabled: Optional[bool] = None
    ticket_profile: Optional[str] = None
