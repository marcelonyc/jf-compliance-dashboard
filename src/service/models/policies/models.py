# generated by datamodel-codegen:
#   filename:  policies.json
#   timestamp: 2024-11-27T18:03:55+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import Field

from sqlmodel import SQLModel, Field
from typing import List
from sqlalchemy import Column
from database.database import json_type


class BlockDownload(SQLModel):
    unscanned: bool
    active: bool


class Actions(SQLModel):
    block_download: BlockDownload
    fail_build: Optional[bool] = None
    custom_severity: Optional[str] = None
    mails: Optional[List[str]] = None
    webhooks: Optional[List[str]] = None


class CvssRange(SQLModel):
    from_: float = Field(..., alias="from")
    to: float


class OpRiskCustom(SQLModel):
    is_eol: bool
    newer_versions_greater_than: Optional[int] = None
    release_date_greater_than_months: Optional[int] = None
    risk: str
    use_and_condition: bool
    committers_less_than: Optional[int] = None
    release_cadence_per_year_less_than: Optional[int] = None
    commits_less_than: Optional[int] = None


class Exposures(SQLModel):
    applications: bool
    iac: bool
    malicious_code: bool
    min_severity: str
    secrets: bool
    services: bool


class Criteria(SQLModel):
    fix_version_dependant: Optional[bool] = None
    malicious_package: Optional[bool] = None
    min_severity: Optional[str] = None
    allow_unknown: Optional[bool] = None
    allowed_licenses: Optional[List[str]] = None
    multi_license_permissive: Optional[bool] = None
    cvss_range: Optional[CvssRange] = None
    op_risk_custom: Optional[OpRiskCustom] = None
    banned_licenses: Optional[List[str]] = None
    op_risk_min_risk: Optional[int] = None
    applicable_cves_only: Optional[bool] = None
    vulnerability_ids: Optional[List[str]] = None
    exposures: Optional[Exposures] = None
    package_name: Optional[str] = None
    package_type: Optional[str] = None
    package_versions: Optional[List[str]] = None
    specific_package: Optional[bool] = None


class Rule(SQLModel):
    name: str
    priority: int
    actions: Actions
    criteria: Criteria


class Policies(SQLModel, table=True):
    name: str | None = Field(default=None, primary_key=True)
    type: str
    author: str
    rules: List[Rule] = Field(sa_column=Column(json_type))
    created: str
    modified: str
    description: Optional[str] = None
    project_key: Optional[str] = None
